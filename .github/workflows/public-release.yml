name: 🚀 Public Release

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release type'
        required: true
        default: 'partial'
        type: choice
        options:
          - partial
          - full
          - test
      public_repo:
        description: 'Public repository URL'
        required: true
        type: string
      message:
        description: 'Release message'
        required: false
        type: string
        default: 'Public release update'

jobs:
  validate:
    name: 🔍 Validate Release
    runs-on: ubuntu-latest
    outputs:
      ready_count: ${{ steps.validation.outputs.ready_count }}
      total_count: ${{ steps.validation.outputs.total_count }}
      can_release: ${{ steps.validation.outputs.can_release }}
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
      
      - name: 🐍 Setup Python with uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          cache-dependency-glob: "requirements.txt"
      
      - name: 📦 Install dependencies
        run: |
          uv venv
          uv pip install -r requirements.txt
      
      - name: 🔍 Validate challenges
        id: validation
        run: |
          uv run scripts/prepare-public-release.py --validate-only
          
          # 計算準備好的題目數量
          READY_COUNT=$(find challenges -name "public.yml" -exec grep -l "ready_for_release: true" {} \; | wc -l)
          TOTAL_COUNT=$(find challenges -name "public.yml" | wc -l)
          
          echo "ready_count=$READY_COUNT" >> $GITHUB_OUTPUT
          echo "total_count=$TOTAL_COUNT" >> $GITHUB_OUTPUT
          
          if [ "$READY_COUNT" -gt 0 ]; then
            echo "can_release=true" >> $GITHUB_OUTPUT
          else
            echo "can_release=false" >> $GITHUB_OUTPUT
          fi
          
          echo "✅ 準備發布：$READY_COUNT/$TOTAL_COUNT 個題目"
      
      - name: 🔒 Check sensitive data
        run: |
          uv run scripts/check-sensitive.py
      
      - name: 📊 Upload validation report
        uses: actions/upload-artifact@v4
        with:
          name: release-report
          path: release-report.md

  prepare:
    name: 🛠️ Prepare Release
    runs-on: ubuntu-latest
    needs: validate
    if: needs.validate.outputs.can_release == 'true'
    
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: 🐍 Setup Python with uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true
          cache-dependency-glob: "requirements.txt"
      
      - name: 📦 Install dependencies
        run: |
          uv venv
          uv pip install -r requirements.txt
      
      - name: 🔧 Setup Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
      
      - name: 🚀 Sync to public repository
        env:
          PUBLIC_REPO: ${{ github.event.inputs.public_repo }}
          RELEASE_MESSAGE: ${{ github.event.inputs.message }}
        run: |
          echo "🔄 開始同步到公開倉庫：$PUBLIC_REPO"
          
          # 執行同步
          uv run scripts/sync-to-public.py --public-repo "$PUBLIC_REPO"
          
          # 推送到公開倉庫
          cd public-release
          
          if [ -n "$(git status --porcelain)" ]; then
            git add .
            git commit -m "🚀 $RELEASE_MESSAGE

            📊 Release Statistics:
            - Ready: ${{ needs.validate.outputs.ready_count }}/${{ needs.validate.outputs.total_count }} challenges
            - Type: ${{ github.event.inputs.release_type }}
            - Date: $(date -u '+%Y-%m-%d %H:%M:%S UTC')
            
            🤖 Generated by GitHub Actions"
            
            git push -u origin main
            echo "✅ 成功推送到公開倉庫"
          else
            echo "ℹ️ 沒有變更需要推送"
          fi
      
      - name: 📦 Create release archive
        run: |
          cd public-release
          tar -czf ../public-release.tar.gz .
          cd ..
          echo "✅ 建立發布壓縮檔：public-release.tar.gz"
      
      - name: 📤 Upload release archive
        uses: actions/upload-artifact@v4
        with:
          name: public-release-${{ github.run_number }}
          path: public-release.tar.gz

  notify:
    name: 📢 Notify Release
    runs-on: ubuntu-latest
    needs: [validate, prepare]
    if: always()
    
    steps:
      - name: 📥 Download validation report
        uses: actions/download-artifact@v4
        with:
          name: release-report
      
      - name: 📊 Create release summary
        run: |
          echo "# 🚀 Public Release Summary" > release-summary.md
          echo "" >> release-summary.md
          echo "**Release Type**: ${{ github.event.inputs.release_type }}" >> release-summary.md
          echo "**Repository**: ${{ github.event.inputs.public_repo }}" >> release-summary.md
          echo "**Date**: $(date -u '+%Y-%m-%d %H:%M:%S UTC')" >> release-summary.md
          echo "**Triggered by**: @${{ github.actor }}" >> release-summary.md
          echo "" >> release-summary.md
          
          if [ "${{ needs.validate.outputs.can_release }}" = "true" ]; then
            echo "✅ **Status**: Success" >> release-summary.md
            echo "📊 **Statistics**: ${{ needs.validate.outputs.ready_count }}/${{ needs.validate.outputs.total_count }} challenges released" >> release-summary.md
          else
            echo "❌ **Status**: Failed - No challenges ready for release" >> release-summary.md
          fi
          
          echo "" >> release-summary.md
          echo "## 📋 Validation Report" >> release-summary.md
          echo "" >> release-summary.md
          cat release-report.md >> release-summary.md
      
      - name: 💬 Comment on PR (if exists)
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const summary = fs.readFileSync('release-summary.md', 'utf8');
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: summary
            });
      
      - name: 📤 Upload summary
        uses: actions/upload-artifact@v4
        with:
          name: release-summary
          path: release-summary.md