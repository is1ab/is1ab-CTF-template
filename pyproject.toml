[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "is1ab-ctf-template"
version = "1.0.0"
description = "IS1AB CTF 比賽專案模板 - 快速建立標準化 CTF 比賽環境"
readme = "README.md"
license = {file = "LICENSE"}
authors = [
    {name = "IS1AB Team", email = "team@is1ab.com"}
]
keywords = ["ctf", "cybersecurity", "competition", "template"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Education",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Security",
    "Topic :: Education",
]
requires-python = ">=3.9"
dependencies = [
    "pyyaml>=6.0",
    "jinja2>=3.0.0",
    "click>=8.0.0",
    "python-dotenv>=0.19.0",
    "requests>=2.28.0",
    "flask>=2.0.0",
    "flask-cors>=4.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=2.20.0",
]
web = [
    "flask>=2.0.0",
    "flask-cors>=4.0.0",
    "gunicorn>=20.1.0",
]
docker = [
    "docker>=6.0.0",
]

[project.urls]
Homepage = "https://github.com/is1ab/is1ab-CTF-template"
Documentation = "https://github.com/is1ab/is1ab-CTF-template/wiki"
Repository = "https://github.com/is1ab/is1ab-CTF-template"
"Bug Tracker" = "https://github.com/is1ab/is1ab-CTF-template/issues"

[project.scripts]
create-challenge = "scripts.create_challenge:main"
update-readme = "scripts.update_readme:main"
validate-challenge = "scripts.validate_challenge:main"

[tool.hatch.build.targets.wheel]
packages = ["scripts"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--cov=scripts",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=80",
    "-v"
]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  | challenges
)/
'''

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "yaml.*"
ignore_missing_imports = true

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "challenges/",
    ".venv/",
    ".tox/",
    "build/",
    "dist/",
]

[tool.coverage.run]
source = ["scripts"]
omit = [
    "tests/*",
    "challenges/*",
    "*/tests/*",
    "*/test_*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]